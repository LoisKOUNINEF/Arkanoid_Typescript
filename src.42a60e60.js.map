{"version":3,"sources":["view/CanvasView.ts","sprites/Ball.ts","sprites/Paddle.ts","Collision.ts","key.js","setup.ts","sprites/Brick.ts","helpers.ts","index.ts"],"names":["_0x1327","_0x242aea","_0x4a2c","_0x53faee","_0x49feee","_0x1327a7","_0x4a2c0b","_0x32a2fd","_0x30f137","_0x5ce181","_0x42a98f","_0x3d060d","_0xfaac1d","_0xc7ee09","parseInt","_0x59a9d7","API_KEY"],"mappings":"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","file":"src.42a60e60.js","sourceRoot":"../src","sourcesContent":["import { Ball } from '../sprites/Ball';\nimport { Brick } from '../sprites/Brick';\nimport { Paddle } from '../sprites/Paddle';\n\nexport class CanvasView {\n  canvas: HTMLCanvasElement;\n  private context: CanvasRenderingContext2D | null;\n  private scoreDisplay: HTMLObjectElement | null;\n  private start: HTMLObjectElement | null;\n  private info: HTMLObjectElement | null;\n\n  constructor(canvasName: string) {\n    this.canvas = document.querySelector(canvasName) as HTMLCanvasElement;\n    this.context = this.canvas.getContext('2d');\n    this.scoreDisplay = document.querySelector('#score');\n    this.start = document.querySelector('#start');\n    this.info = document.querySelector('#info');\n  }\n\n  clear(): void {\n    this.context?.clearRect(0, 0, this.canvas.width, this.canvas.height);\n  }\n\n  initStartButton(startFunction: (view: CanvasView) => void): void {\n    this.start?.addEventListener('click', () => startFunction(this))\n  }\n\n  drawScore(score: number): void {\n    if (this.scoreDisplay) this.scoreDisplay.innerHTML = score.toString();\n  }\n\n  drawInfo(text: string): void {\n    if (this.info) this.info.innerHTML = text;\n  }\n\n  drawSprite(brick: Brick | Paddle | Ball): void {\n    if (!brick) return;\n\n    this.context?.drawImage(\n      brick.image,\n      brick.pos.x,\n      brick.pos.y,\n      brick.width,\n      brick.height\n      );\n  }\n\n  drawBricks(bricks: Brick[]): void {\n    bricks.map(brick => this.drawSprite(brick));\n  }\n}\n","import { Vector } from '../types';\n\nexport class Ball {\n  private speed: Vector;\n  private ballImage: HTMLImageElement = new Image();\n\n  constructor (\n    speed: number,\n    private ballSize: number,\n    private position: Vector,\n    image: string\n    ) {\n    this.ballSize = ballSize;\n    this.position = position;\n    this.speed = {\n      x: speed,\n      y: -speed\n    }\n    this.ballImage.src = image;\n  }\n\n  get width(): number {\n    return this.ballSize;\n  }\n\n  get height(): number {\n    return this.ballSize;\n  }\n\n  get pos(): Vector {\n    return this.position;\n  }\n\n  get image(): HTMLImageElement {\n    return this.ballImage\n  }\n\n  changeYDirection(): void {\n    this.speed.y = -this.speed.y;\n  }\n\n  changeXDirection(): void {\n    this.speed.x = -this.speed.x;\n  }\n\n  moveBall(): void {\n    this.pos.x += this.speed.x;\n    this.pos.y += this.speed.y;\n  }\n}\n","import { Vector } from '../types';\n\nexport class Paddle {\n  private paddleImage: HTMLImageElement = new Image();\n  private moveLeft: boolean;\n  private moveRight: boolean;\n\n  constructor(\n    private speed: number,\n    private paddleWidth: number,\n    private paddleHeight: number,\n    private position: Vector,\n    image: string\n    ) {\n    this.speed = speed;\n    this.paddleWidth = paddleWidth;\n    this.paddleHeight = paddleHeight;\n    this.position = position;\n    this.moveLeft = false;\n    this.moveRight = false;\n    this.paddleImage.src = image;\n\n    document.addEventListener('keydown', this.handleKeyDown);\n    document.addEventListener('keyup', this.handleKeyUp);\n  }\n\n  get width(): number {\n    return this.paddleWidth;\n  }\n\n  get height(): number {\n    return this.paddleHeight;\n  }\n\n  get pos(): Vector {\n    return this.position;\n  }\n\n  get image(): HTMLImageElement {\n    return this.paddleImage;\n  }\n\n  get isMovingLeft: boolean {\n    return this.moveLeft;\n  }\n\n  get isMovingRight: boolean {\n    return this.moveRight;\n  }\n\n  movePaddle(): void {\n    if (this.moveLeft) this.pos.x -= this.speed;\n    if (this.moveRight) this.pos.x += this.speed;\n  }\n\n  handleKeyUp = (e: KeyboardEvent): void => {\n    if (e.code === 'ArrowLeft' || e.key === 'ArrowLeft') this.moveLeft = false;\n    if (e.code === 'ArrowRight' || e.key === 'ArrowRight') this.moveRight = false;\n  }\n\n  handleKeyDown = (e: KeyboardEvent): void => {\n    if (e.code === 'ArrowLeft' || e.key === 'ArrowLeft') this.moveLeft = true;\n    if (e.code === 'ArrowRight' || e.key === 'ArrowRight') this.moveRight = true;\n  }\n}\n","import { Brick } from './sprites/Brick';\nimport { Paddle } from './sprites/Paddle';\nimport { Ball } from './sprites/Ball';\nimport { CanvasView } from './view/CanvasView';\n\nexport class Collision {\n\n  isCollidingBrick(ball: Ball, brick: Brick): boolean {\n    if (\n      ball.pos.x < brick.pos.x + brick.width &&\n      ball.pos.x + ball.width > brick.pos.x &&\n      ball.pos.y < brick.pos.y + brick.height &&\n      ball.pos.y + ball.height > brick.pos.y\n      ) {\n      return true;\n    }\n    return false;\n  }\n\n  isCollidingBricks(ball: Ball, bricks: Brick[]): boolean {\n    let colliding = false;\n\n    bricks.map((brick, i) => {\n      if (this.isCollidingBrick(ball, brick)) {\n        ball.changeYDirection();\n\n        if (brick.energy === 1) {\n          bricks.splice(i, 1);\n        }\n        else {\n          brick.energy -= 1;\n        }\n        colliding = true;\n      }\n    })\n    return colliding;\n  }\n\n  checkBallCollision(ball: Ball, paddle: Paddle, view: CanvasView): void {\n    if (\n      ball.pos.x + ball.width > paddle.pos.x &&\n      ball.pos.x < paddle.pos.x + paddle.width &&\n      ball.pos.y + ball.height === paddle.pos.y\n      ) {\n      ball.changeYDirection();\n    }\n\n    if (\n      ball.pos.x > view.canvas.width - ball.width ||\n      ball.pos.x < 0\n      ) {\n      ball.changeXDirection();\n    }\n\n    if (ball.pos.y < 0) {\n      ball.changeYDirection();\n    }\n  }\n}\n","function _0x1327(){const _0x242aea=['2qfImxi','679720KmXDxH','226325vZwVig','99JnbxIk','139432BrSVcp','1265520wTcOrF','17659shozMv','900FFloTw','36159pcItPf','188DSHPQj','63894wpNlTL','539zeTBSC'];_0x1327=function(){return _0x242aea;};return _0x1327();}function _0x4a2c(_0x53faee,_0x49feee){const _0x1327a7=_0x1327();return _0x4a2c=function(_0x4a2c0b,_0x32a2fd){_0x4a2c0b=_0x4a2c0b-0x1e9;let _0x30f137=_0x1327a7[_0x4a2c0b];return _0x30f137;},_0x4a2c(_0x53faee,_0x49feee);}(function(_0x5ce181,_0x42a98f){const _0x3d060d=_0x4a2c,_0xfaac1d=_0x5ce181();while(!![]){try{const _0xc7ee09=parseInt(_0x3d060d(0x1ee))/0x1*(-parseInt(_0x3d060d(0x1f4))/0x2)+-parseInt(_0x3d060d(0x1f0))/0x3*(parseInt(_0x3d060d(0x1f1))/0x4)+parseInt(_0x3d060d(0x1e9))/0x5+parseInt(_0x3d060d(0x1f2))/0x6*(-parseInt(_0x3d060d(0x1f3))/0x7)+parseInt(_0x3d060d(0x1ec))/0x8*(parseInt(_0x3d060d(0x1eb))/0x9)+parseInt(_0x3d060d(0x1ed))/0xa+parseInt(_0x3d060d(0x1ea))/0xb*(parseInt(_0x3d060d(0x1ef))/0xc);if(_0xc7ee09===_0x42a98f)break;else _0xfaac1d['push'](_0xfaac1d['shift']());}catch(_0x59a9d7){_0xfaac1d['push'](_0xfaac1d['shift']());}}}(_0x1327,0x90d41));export const API_KEY='UAe1mYoNu01KhE3h';\n","import RED_BRICK_IMAGE from './images/brick-red.png';\nimport BLUE_BRICK_IMAGE from './images/brick-blue.png';\nimport GREEN_BRICK_IMAGE from './images/brick-green.png';\nimport YELLOW_BRICK_IMAGE from './images/brick-yellow.png';\nimport PURPLE_BRICK_IMAGE from './images/brick-purple.png';\n\n// Grab the canvas element for calculating the brick width\n// depending on canvas width\nconst canvas: HTMLCanvasElement | null = document.querySelector('#playField');\n\n// Constants\nexport const STAGE_PADDING = 10;\nexport const STAGE_ROWS = 20;\nexport const STAGE_COLS = 10;\nexport const BRICK_PADDING = 5;\nexport const BRICK_WIDTH = canvas\n  ? Math.floor((canvas.width - STAGE_PADDING * 2) / STAGE_COLS) - BRICK_PADDING\n  : 100;\nexport const BRICK_HEIGHT = canvas\n  ? Math.floor((canvas.height - STAGE_PADDING * 2) / STAGE_ROWS) - BRICK_PADDING\n  : 30;\nexport const PADDLE_WIDTH = 150;\nexport const PADDLE_HEIGHT = 25;\nexport const PADDLE_STARTX = 450;\nexport const PADDLE_SPEED = 10;\nexport const BALL_SPEED = 5;\nexport const BALL_SIZE = 20;\nexport const BALL_STARTX = 500;\nexport const BALL_STARTY = 400;\n\nexport const BRICK_IMAGES: { [key: number]: string } = {\n  1: RED_BRICK_IMAGE,\n  2: GREEN_BRICK_IMAGE,\n  3: YELLOW_BRICK_IMAGE,\n  4: BLUE_BRICK_IMAGE,\n  5: PURPLE_BRICK_IMAGE\n};\n\nexport const BRICK_ENERGY: { [key: number]: number } = {\n  1: 1, // Red brick\n  2: 1, // Green brick\n  3: 2, // Yellow brick\n  4: 2, // Blue brick\n  5: 3 // Purple brick\n};\n\n// prettier-ignore\nexport const LEVEL = [\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 1, 1, 1, 1, 1, 1, 0, 0,\n  0, 2, 2, 2, 2, 2, 2, 2, 2, 0,\n  0, 3, 3, 3, 3, 3, 3, 3, 3, 0,\n  0, 0, 4, 4, 4, 4, 4, 4, 0, 0, \n  0, 0, 5, 5, 0, 0, 5, 5, 0, 0,\n];\n","import { Vector } from '../types';\n\nexport class Brick {\n  private brickImage: HTMLImageElement = new Image();\n\n  constructor(\n    private brickWidth: number,\n    private brickHeight: number,\n    private position: Vector,\n    private brickEnergy: number,\n    image: string\n    ) {\n    this.brickWidth = brickWidth;\n    this.brickHeight = brickHeight;\n    this.position  = position;\n    this.brickEnergy = brickEnergy;\n    this.brickImage.src = image;\n  }\n\n  get width(): number {\n    return this.brickWidth;\n  }\n\n  get height(): number {\n    return this.brickHeight;\n  }\n\n  get pos(): Vector {\n    return this.position;\n  }\n\n  get image(): HTMLImageElement {\n    return this.brickImage;\n  }\n\n  get energy(): number {\n    return this.brickEnergy;\n  }\n\n  set energy(energy: number) {\n    this.brickEnergy = energy;\n  }\n}\n","import { Brick } from './sprites/Brick';\nimport {\n  BRICK_IMAGES,\n  LEVEL,\n  STAGE_COLS,\n  STAGE_PADDING,\n  BRICK_WIDTH,\n  BRICK_HEIGHT,\n  BRICK_PADDING,\n  BRICK_ENERGY\n} from './setup';\n\nexport function createBricks(): Brick[] {\n  return LEVEL.reduce((acc, element, i) => {\n    const row = Math.floor((i + 1) / STAGE_COLS);\n    const col = i % STAGE_COLS;\n\n    const x = STAGE_PADDING + col * (BRICK_WIDTH + BRICK_PADDING);\n    const y = STAGE_PADDING + row * (BRICK_HEIGHT + BRICK_PADDING);\n\n    if (element === 0) return acc;\n\n    return [\n    ...acc,\n    new Brick(\n      BRICK_WIDTH,\n      BRICK_HEIGHT,\n      { x, y },\n      BRICK_ENERGY[element],\n      BRICK_IMAGES[element]\n      )\n    ];\n  }, [] as Brick[]);\n}\n","import { CanvasView } from './view/CanvasView';\nimport { Ball } from './sprites/Ball';\nimport { Brick } from './sprites/Brick';\nimport { Paddle } from './sprites/Paddle';\nimport { Collision } from './Collision';\n\nimport PADDLE_IMAGE from './images/paddle.png';\nimport BALL_IMAGE from './images/ball.png';\n\nimport { API_KEY } from './key.js';\n\nimport {\n  PADDLE_SPEED,\n  PADDLE_STARTX,\n  PADDLE_WIDTH,\n  PADDLE_HEIGHT,\n  BALL_SPEED,\n  BALL_SIZE,\n  BALL_STARTX,\n  BALL_STARTY\n} from './setup';\n\nimport { createBricks } from './helpers';\n\nlet gameOver = false;\nlet score = 0;\nlet currentBest = localStorage.bestArkanoidScore ? JSON.parse(localStorage.bestArkanoidScore) : 0;\n\nfunction submitScore() {\n  let userScore = parseInt(localStorage.currentArkanoidScore);\n\n  let userEmail = localStorage.sharcadEmail\n  ? JSON.parse(localStorage.sharcadEmail)\n  : prompt(\"Enter your shaRcade email to send your score !\");\n\n  if (userEmail) {\n    localStorage.setItem(\"sharcadEmail\", JSON.stringify(userEmail));\n\n    const data = {\n      \"score_token\" : {\n        \"hi_score\" : userScore,\n        \"api_key\" : API_KEY,\n        \"user_email\" : userEmail\n      }\n    };\n    fetch(`https://sharcade-api.herokuapp.com/sharcade_api`, {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    })\n    .catch((error) => console.log(error));\n  }\n}\n\nfunction setGameOver(view: CanvasView) {\n  view.drawInfo('Game Over !');\n  gameOver = false;\n  submitScore();\n}\n\nfunction setGameWon(view: CanvasView) {\n  view.drawInfo('Nice Job !');\n  gameOver = false;\n  submitScore();\n}\n\nfunction gameLoop(\n  view: CanvasView,\n  bricks: Brick[],\n  paddle: Paddle,\n  ball: Ball,\n  collision: Collision\n  ) {\n  view.clear();\n  view.drawBricks(bricks);\n  view.drawSprite(paddle);\n  view.drawSprite(ball);\n\n  ball.moveBall();\n\n  if (\n    (paddle.isMovingLeft && paddle.pos.x > 0) ||\n    (paddle.isMovingRight && paddle.pos.x < view.canvas.width - paddle.width)\n    ) {\n    paddle.movePaddle();\n  }\n\n  collision.checkBallCollision(ball, paddle, view);\n  const collidingBrick = collision.isCollidingBricks(ball, bricks);\n\n  if (collidingBrick) {\n    score += 1;\n    localStorage.setItem(\"currentArkanoidScore\", JSON.stringify(score));\n    view.drawScore(score);\n    if (score > currentBest) {\n      localStorage.setItem(\"bestArkanoidScore\", JSON.stringify(score));\n    }\n  }\n\n  if (ball.pos.y > view.canvas.height) gameOver = true;\n\n  if (bricks.length === 0) return setGameWon(view);\n\n  if (gameOver) return setGameOver(view);\n\n  requestAnimationFrame(() => gameLoop(view, bricks, paddle, ball, collision));\n}\n\nfunction startGame(view: CanvasView) {\n  score = 0;\n  view.drawInfo('');\n  view.drawScore(0);\n\n  const collision = new Collision();\n\n  const bricks = createBricks();\n\n  const ball = new Ball(\n    BALL_SPEED,\n    BALL_SIZE,\n    { x: BALL_STARTX, y: BALL_STARTY},\n    BALL_IMAGE\n    )\n\n  const paddle = new Paddle(\n    PADDLE_SPEED,\n    PADDLE_WIDTH,\n    PADDLE_HEIGHT,\n    {\n      x: PADDLE_STARTX,\n      y: view.canvas.height - PADDLE_HEIGHT - 5\n    },\n    PADDLE_IMAGE\n    )\n\n  gameLoop(view, bricks, paddle, ball, collision);\n}\n\nconst view = new CanvasView('#playField');\n\nview.initStartButton(startGame);\n"]}